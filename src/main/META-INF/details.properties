#this should be the prefix URI of each user profile of the server
user.profile.uri=user/
#this is the server address which we can add the search or recommendation URI to it
#server.url=http://server4.eu-west-1.rds.amazonaws.com:8084/
server.url = http://localhost:8084/
#http://localhost:8080
#This is to determine if GID will be used or not
server.follow_sonic=false
# This is the search method. It should be one of the following {DEPTH_SEARCH, BREADTH_SEARCH}
search.method=BREADTH_SEARCH
#This defines in which column the search should look for a match
search.in.username=searchInUserName
search.in.interests=searchInInterests
#This is the search and propagate URI by username; for retrieving the local matching users and matching users from potiential users  
search.users.searchPropagate.uri=DOSN.search.module/users/searchAndPropagate
#This is the search and propagate URI by interests; for retrieving the local matching users and matching users from potiential users 
search.interests.searchPropagate.uri=DOSN.search.module/interests/searchAndPropagate
#This is the search URI by username; for retrieving only the local matching users
search.users.search.uri=DOSN.search.module/users/search
#This is the search URI by interests; for retrieving only the local matching users
search.interests.search.uri=DOSN.search.module/interests/search
#This is the recommendation and propagate URI; for retrieving the local recommended users and from potiential users  
recommendation.recommendPropagate.uri=DOSN.recommendation.module/recommendAndPropagate
#This is URI to Start a recommendation Process for a user
recommendation.recommendStart.uri=DOSN.recommendation.module/startRecommendation
# This is the URI which will receive the result from the search module
gui.search.response=gui/searchResponse
# This is the URI which will receive the result from the recommendation module
gui.recommend.response=gui/recommendationResponse
#This is the max hops which could be called and it's used in BREADTH search for determining the max server's peers to be contacted
max.hops=6
#This limits the request in each iteration of recommendation and search algorithm
maxrequest.hop = 5
#seconds after no other iteration in search or recommendation algorithm is done,  algorithm finish if max.hops reached or timeout trigger
search.recommendation.timeout = 20